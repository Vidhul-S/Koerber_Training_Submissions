package com.productStore.products.controller;

import com.productStore.products.entities.Product;
import com.productStore.products.service.ProdServImpl;
import lombok.AllArgsConstructor;
import org.springframework.data.domain.Page;
import org.springframework.data.repository.query.Param;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;

import java.math.BigDecimal;
import java.util.List;
@AllArgsConstructor
@Controller
public class ProdCont {
    private final ProdServImpl prodServImpl;
    @GetMapping("products")
    public ResponseEntity<List<Product>> getAllProducts() {
        return ResponseEntity.ok(prodServImpl.getListOfAllProducts());
    }

    @GetMapping("products/name=?1")
    public ResponseEntity<List<Product>> getAllProductsByName(String name) {
        return ResponseEntity.ok(prodServImpl.getAllProductBasedOnName(name));
    }

    @GetMapping("products/name=?1&price=?2")
    public ResponseEntity<List<Product>> getAllProductsByNameAndPrice(String name, BigDecimal price) {
        return ResponseEntity.ok(prodServImpl.getAllProductBasedOnNameAndPrice(name, price));
    }

    @GetMapping("products/name=?1|price=?2")
    public List<Product> getAllProductsByNameOrPrice(String name, BigDecimal price) {
        return prodServImpl.getAllProductBasedOnNameOrPrice(name, price);
    }

    // http://localhost:8081/products/page?offset=1&pageSize=1
    @GetMapping(path = "products/page")
    public Page<Product> getAllProductPage(@RequestParam(name="offset")  int offset,
                                           @RequestParam(name = "pageSize")  int pageSize){
        return prodServImpl.getAllProductPage(offset, pageSize);
    }

    //http://localhost:8081/products/page2?offset=1&pageSize=4&field=price
    @GetMapping(path = "products/page2")
    public Page<Product> getAllProductPage2(@RequestParam(name="offset")  int offset,
                                            @RequestParam(name = "pageSize")  int pageSize,
                                            @RequestParam(name = "field") String field){
        return prodServImpl.getAllProductPageSorted(field, offset, pageSize);
    }


}
